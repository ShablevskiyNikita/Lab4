1. 
Periodicity.cs - в ньом перерахування, згідно з варіантом

Journal.cs - Тип «Журнал» клас, що містить:
_periodicity - закрите поля типу «Періодичність» 
_name -символьний рядок з назвою;
_articles- інформація про включені до даного видання статті оформити як список (List);
AddArticle - функція для внесення чергової статті до даного видання ;

Article.cs - Тип «Стаття» клас, що містить:
_author - закриті поля типу «Автор», 
_title - символьний рядок з назвою, цілі з кількістю
сторінок та гонораром;

Author.cs - Тип «Автор» клас, що містить:
_firstName, _lastName, _birthday - поля з ім’ям та прізвищем, реалізовані у вигляді рядків (String) та
датою народження типу Date;

2. Всі дочірні форми відкриваютьтся модально, дані до них передаються через конструктор 
відповідної форми. Тому батьківські форми не можливо закрити, поки не закінчити дії в 
дочірній.

3.Редагування об'єктів через форми фактично робиться шляхом того, що  редагуються існуючі; 
Дочірня форма отримує певні данні із батьківскьої, і в залежность від статусу збереження
(треба зберегти зміни, чи треба cancel-нуть змінни) робити з ними певні дії(змінює  значення 
полів классу). При цьому в більшості випадків перевірки немає, ажєе на полях текстового вводу 
стоїть валідація =>  в double  не запишему стрінгу. А поля для вибору із списку(ComboBox) валідації
не потребують, окрім випадку, що людина у випадючий список щось введе(звичайний dropdown - 
апогей технологій, тумо його немає у Windows Forms :C, або я не догледів)

4.Серіалізація зроблено для приватних полів, повноцінна(завдяки інтерфейсу IXmlSerializable)

Author.cs => firstName,lastName,birthdaу - приватні поля, сереалізація  працює(аналоічно 
для інших двох классів Journal.cs, Article,cs)
5. Validation

-ArticleInfo.cs => title_textBox_Validating,pagesNumber_textBox_Validating,honorarium_textBox_Validating
Валідація стоїть, аби користувач не зміг ввести в поле гонорар - якесь слово, аналогічно з кількістю сторінок
для титулки статті стоїть також валідація, аби можна було ввести тіьки букви, + аби було 1+ символів в рядку ,титулка не може складатися з 0 символів)
-AuthorInfo.cs => firstName_textBox_Validating,lastName_textBox_Validating
стоїть також валідація, аби можна було ввести тільки букви,+ аби було 1+ символів в рядку, титулка не може складатися з 0 символів)

Приклад валідації:

У будь-якого textbox-a є подія Validating, а яка спрацьовує при зміні фокусу з даного текстбоксу, її було використано для валідації textbox-a
 private void honorarium_textBox_Validating(object sender, CancelEventArgs e)
        {
            Спочатку задано регульним виразом те значення  рядку, яке потрібно для відповідного textbox-у.
            У даному випадку нам потрібно аби людина могла вести гонорар =>  гонорар це число, яке може  бути цілими,
            або ж із дробовою частиною(100 і 160,10), гонорар не може бути словом(рядком) :"краказябр" і пустим словом(рядком).
            Тому задамо регулярний вираз, який будет відповідати  значенням string-ы, що нам необхідні :
            ^\d+$ - цілі додатні числа,кількіст цифр в яких >=1(гонорар, що = ""  нас не влаштовує)
            | - або(аби юзер міг вводити як цілі числа, так і з дробовою частиною)
            ^\d+,\d+$ - числа,що складаються із цілої та дробової частини(10,60(десять гривень, 60 копійок)
            Regex regexGroupFormat = new Regex(@"^\d+$|^\d+,\d+$");
            
            Наступним етапом за допомогою методів класу Regex, можна перевірити, чи введене у textbox значення відповідає заданому Regex-у
            Заходимо в даний if,тільки тоді, коли значення не відповідає  регулярному виразу, що був записаний раніше
            if (!regexGroupFormat.IsMatch(honorarium_textBox.Text))
            {
                Так як ми встановили, що дані єлемента(textBox-a) управління Validating недійсні(невідповідають Regex-y), нам потрібно полю Cancel  події e(типу CancelEventArgs) присвоїти значення true, тобто ми кажимо що дане поле не валідне.
                Форма не дасть юзеру змінити фокус із даного текстбоксу, поки він не введе валідні дані, що нам і потрібно               
                e.Cancel = true;
                Виводимо юзеру відповідне текстове повідомлення
                MessageBox.Show("Honorarium must be an integer number!");
            }
        }

