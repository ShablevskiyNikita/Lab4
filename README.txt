1. 
Periodicity.cs - в ньом перерахування, згідно з варіантом

Journal.cs - Тип «Журнал» клас, що містить:
- закриті поля типу «Періодичність» та символьний рядок з назвою;
- інформацію про включені до даного видання статті оформити як список (List);
- передбачити функцію для внесення чергової статті до даного видання ;
- крім стандартної функції формування рядка з повною інформацією,
передбачити функцію ToShortString формування рядка скороченої інформації з
назвою журналу та загальною кількістю сторінок;

Article.cs - Тип «Стаття» клас, що містить:
- закриті поля типу «Автор», символьний рядок з назвою, цілі з кількістю
сторінок та гонораром;

Author.cs - Тип «Автор» клас, що містить:
- закриті поля з ім’ям та прізвищем, реалізовані у вигляді рядків (String) та
датою народження типу Date;

2. Всі дочірні форми відкриваютьтся модально, дані до них передаються через конструктор 
відповідної форми. Тому батьківські форми не можливо закрити, поки не закінчити дії в 
дочірній.

3.Редагування об'єктів через форми фактично робиться шляхом того, що  редагуються існуючі; 
Дочірня форма отримує певні данні із батьківскьої, і в залежность від статусу збереження
(треба зберегти зміни, чи треба cancel-нуть змінни) робити з ними певні дії(змінює  значення 
полів классу). При цьому в більшості випадків перевірки немає, ажєе на полях текстового вводу 
стоїть валідація =>  в double  не запишему стрінгу. А поля для вибору із списку(ComboBox) валідації
не потребують, окрім випадку, що людина у випадючий список щось введе(звичайний dropdown - 
апогей технологій, тумо його немає у Windows Forms :C, або я не догледів)

4.Серіалізація зроблено для приватних полів, повноцінна(завдяки інтерфейсу IXmlSerializable)

Author.cs => firstName,lastName,birthdaу - приватні поля, сереалізація  працює(аналоічно 
для інших двох классів Journal.cs, Article,cs)
5. Validation

-ArticleInfo.cs => title_textBox_Validating,pagesNumber_textBox_Validating,honorarium_textBox_Validating
Валідація стоїть, аби користувач не зміг ввести в поле гонорар - якесь слово, аналогічно з кількістю сторінок
для титулки статті стоїть також валідація, аби можна було ввести тіьки букви, + аби було 1+ символів в рядку ,титулка не може складатися з 0 символів)
-AuthorInfo.cs => firstName_textBox_Validating,lastName_textBox_Validating
стоїть також валідація, аби можна було ввести тільки букви,+ аби було 1+ символів в рядку, титулка не може складатися з 0 символів)

Суть валідації в тому, що ми перевіряємо, чи відповідають введені дані validation pattern-у, якщо ні, виводимо юзеру повідомлення відповідне
